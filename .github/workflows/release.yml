name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## Changes in this Release
          
          - Auto-generated release from tag ${{ github.ref }}
          - Please check the commit history for detailed changes
          
          ## Installation
          
          ```bash
          git clone https://github.com/afiqbaharuddin/prodigious-event-management.git
          cd prodigious-event-management
          git checkout ${{ github.ref }}
          docker-compose up --build
          ```
        draft: false
        prerelease: false

  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: create-release

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Build and push Backend image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/event-backend:${{ steps.version.outputs.VERSION }}
          ${{ secrets.DOCKER_USERNAME }}/event-backend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push Frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/event-frontend:${{ steps.version.outputs.VERSION }}
          ${{ secrets.DOCKER_USERNAME }}/event-frontend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
